For function parsing separate all of the elements with a space.
So for example:
"cos(x)+y" is wrong
"cos ( x ) + y" is valid

It also reads the decimal point, not a comma.
So if you want to write down 1/10 in decimals, you'll have to write "0.1", not "0,1".
It might depend on the operating system that you're using, so take this note with a grain of salt

Avoid having a negative sign at the start, while it will work for costants and variables it will lead to issues with any operators.
It must also be with the relevant constant or variable
So: 
"-x + y" <-- Valid
"- x + y" <-- Invalid
"-cos ( x )" <-- Invalid. In this case the easiest thing to do would be to add a zero at the start, turning it into
"0 - cos ( x )" <-- Valid.

It only accepts x and y values, so a f(u,v) or any other variable will not work.
The valid operators are +,-,*,/,^
The valid functions are cos, sin, tan, acos, asin, atan, cosh, sinh, tanh, abs, log, log10.

log gives the natural logarithm (base e)
log10 gives the logarith base 10.

Trigonometric functions are calculated based off radians, not degrees.

Lastly always try to keep the functions with brackets, but that's for general ordering advantages.

So while " cos x + 1 " will be read, it will interpret it as " cos ( x ) + 1", which might differ from what you want.